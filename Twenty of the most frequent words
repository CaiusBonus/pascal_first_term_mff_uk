{Zadanie CZ: Čtěte vstupní textový soubor text.in a pro dvacet nejčetnějších slov v něm určete jejich četnost. Tato nejčetnější slova
spolu s jejich četnostmi zapište na výstup v pořadí podle klesající četnosti. Pokud mají dvě různá slova shodnou četnost, je lhostejno,
které z nich do výstupní dvacítky vyberete, a je lhostejno, v jakém pořadí je na výstup zapíšete.

Slovem zde rozumíme libovolnou souvislou posloupnost písmen, pokud znak, který jí v souboru bezprostředně předchází, ani znak,
který ji v souboru bezprostředně následuje, nejsou písmena. Za písmena zde považujeme pouze znaky anglické abecedy. Při porovnávání 
dvou slov bereme do úvahy i rozdíl mezi malým a velkým písmenem. Předpokládejte, že a) počet různých slov ve vstupním souboru bude
nejméně 1 a nebude větší než 1000, b) žádné slovo ve vstupním souboru nebude delší než 30 písmen.

Výsledek zapište na standardní výstup. Na každý řádek výstupu zapište slovo a jeho četnost, číslo od slova oddělte mezerou. Jestliže 
vstupní soubor obsahuje méně než 20 různých slov, na výstupu bude pouze tolik slov, kolik se ve vstupním souboru nachází.

Požadavek: Vstupní soubor čtěte pouze jednou.


Příklad vstupního souboru:

A computer file is a block of arbitrary information, or resource for storing information, which is available to a computer program 
and is usually based on some kind of durable storage. A file is durable in the sense that it remains available for programs 
to use after the current program has finished. Computer files can be considered as the modern counterpart of paper documents
which traditionally are kept in offices' and libraries' files, and this is the source of the term. 
At the lowest level, many modern operating systems consider files simply as a one-dimensional sequence of bytes. At a higher level,
where the content of the file is being considered, these binary digits may represent integer values, text characters, image pixels,
audio or anything else. It is up to the program using the file to understand the meaning and internal layout of information in the file
and present it to a user as more meaningful information (such as text, images, sounds, or executable application programs). 
At any instant in time, a file might have a size, normally expressed as number of bytes, that indicates how much storage is associated 
with the file. In most modern operating systems the size can be any non-negative whole number of bytes up to a system limit.
However, the general definition of a file does not require that its instant size has any real meaning, unless the data within the file
happens to correspond to data within a pool of persistent storage.

Správný výstup může vypadat např. takto:

the 17
of 11
a 10
file 9
is 8
to 8
and 5
as 5
information 4
in 4
or 3
program 3
storage 3
that 3
files 3
modern 3
At 3
bytes 3
any 3
size 3

Jiný příklad vstupního souboru:

aA Aa AAA aaa aAa 1a 2a 3aa
A AaA AaA aa aAa 1A 2A 3AA
Správný výstup může vypadat např. takto:

A 3
aAa 2
a 2
aa 2
AaA 2
aA 1
Aa 1
AAA 1
aaa 1
AA 1  }

program najcslova;

type word=record
                 oznaceni:string[30];
                 pocetVyskytov:integer;
                 end;
var f:text;
    slovo:array [1..1000] of word;
    pismeno:char;
    temp:string[30];
    pocetSlov,i,j,pocetPismen:integer;
    nachaziSe:boolean;
    switch:word;
    naVypis:integer;
begin
  assign(f,'text.in');
  reset(f);
  pocetSlov:=0;
  while true do
begin
  pocetPismen:=1;
  pismeno:='x';
  while true do
  begin
    read(f,pismeno);
    if (not(((ord(pismeno)>=65) and (ord(pismeno)<=90)) or ((ord(pismeno)>=97) and
     (ord(pismeno)<=122))) and (pocetPismen=1) and (eof(f)))
     then break;
    if (not(((ord(pismeno)>=65) and (ord(pismeno)<=90)) or
     ((ord(pismeno)>=97) and (ord(pismeno)<=122))) and (pocetPismen=1)) then continue;
    if not(((ord(pismeno)>=65) and (ord(pismeno)<=90)) or ((ord(pismeno)>=97) and (ord(pismeno)<=122))) then break;
    temp[pocetPismen]:=pismeno;
    inc(pocetPismen);
    if (eof(f) or eoln(f)) then break;
  end;
  SetLength(temp, pocetPismen-1);
  if eoln(f) then readln(f);
  nachaziSe:=false;
  for i:=1 to pocetSlov do
  begin
    if slovo[i].oznaceni=temp then
    begin
       inc(slovo[i].pocetVyskytov);
       if i-1>1 then
       begin
          j:=i;
          while slovo[j].pocetVyskytov>slovo[j-1].pocetVyskytov do
          begin
            switch:=slovo[j];
            slovo[j]:=slovo[j-1];
            slovo[j-1]:=switch;
            dec(j);
            if j-1<1 then break;
          end;
       end;
       nachaziSe:=true;
       break;
    end;
  end;
  if not nachaziSe then
  begin
     inc(pocetSlov);
     slovo[pocetSlov].oznaceni:=temp;
     slovo[pocetSlov].pocetVyskytov:=1;
  end;
  if eof(f) then break;
end;
  if pocetSlov<20 then naVypis:=pocetSlov
                  else naVypis:=20;
  for i:=1 to naVypis do writeln(slovo[i].oznaceni,' ',slovo[i].pocetVyskytov);
  close(f);
  readln;
end.
